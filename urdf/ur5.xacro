<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="ur_robot">

<xacro:arg name="gazebo" default="true"/>
<xacro:arg name="prefix" default=""/>
<xacro:arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface"/>

<!-- import main macro TODO -->
<xacro:include filename="$(find ur_description)/urdf/inc/ur_macro.xacro"/>


<!-- parameters -->
<arg name="joint_limit_params" default="$(find ur_description)/config/ur5e/joint_limits.yaml"/>
<arg name="kinematics_params" default="$(find ur_description)/config/ur5e/default_kinematics.yaml"/>
<arg name="physical_params" default="$(find ur_description)/config/ur5e/physical_parameters.yaml"/>
<arg name="visual_params" default="$(find ur_description)/config/ur5e/visual_parameters.yaml"/>
<!-- legal values:
 - hardware_interface/PositionJointInterface
 - hardware_interface/VelocityJointInterface
 - hardware_interface/EffortJointInterface
-->
<xacro:arg name="safety_limits" default="false"/>
<xacro:arg name="safety_pos_margin" default="0.15"/>
<xacro:arg name="safety_k_position" default="20"/>

<xacro:ur_robot
prefix="$(arg prefix)"
joint_limits_parameters_file="$(arg joint_limit_params)"
kinematics_parameters_file="$(arg kinematics_params)"
physical_parameters_file="$(arg physical_params)"
visual_parameters_file="$(arg visual_params)"
transmission_hw_interface="$(arg transmission_hw_interface)"
safety_limits="$(arg safety_limits)"
safety_pos_margin="$(arg safety_pos_margin)"
safety_k_position="$(arg safety_k_position)"/>
     

<xacro:if value="$(arg gazebo)">

  <!--
    Attach the Gazebo model to Gazebo's world frame.

    Note: if you're looking to integrate a UR into a larger scene and need
    to add EEFs or other parts, DO NOT change this file or the 'world' link
    here. Create a NEW xacro instead and decide whether you need to add
    a 'world' link there.
  -->
  <link name="world"/>
  <joint name="world_joint" type="fixed">
    <parent link="world"/>
    <child link="base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>
  

    <!-- Configure self collision properties per link -->
    <gazebo reference="$(arg prefix)shoulder_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="$(arg prefix)upper_arm_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="$(arg prefix)forearm_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="$(arg prefix)wrist_1_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="$(arg prefix)wrist_3_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="$(arg prefix)wrist_2_link">
      <selfCollide>true</selfCollide>
    </gazebo>
    <gazebo reference="$(arg prefix)ee_link">
      <selfCollide>true</selfCollide>
    </gazebo>

    <!--
      Inject Gazebo ROS Control plugin, which allows us to use ros_control
      controllers to control the virtual robot hw.
    -->
    <gazebo>
      <plugin name="gazebo_ros_controller_manager" filename="libgazebo_ros_control.so">
			
			<robotNamespace>/ur5</robotNamespace> <!--TODO1 change this with prefix when you use 2 robots     -->
			<robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
			<legacyModeNS>true</legacyModeNS>
      </plugin>
    </gazebo>
  </xacro:if>
</robot>
